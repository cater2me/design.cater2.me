'use strict';

// Generated by CoffeeScript 2.3.1
var LoadMore, Loading, LoadingOrValue, LoadingTbody, PropTypes, React, SpinLoading, loadingStyles;

React = require('react');

PropTypes = require('prop-types');

SpinLoading = function SpinLoading() {
  return React.createElement(
    'span',
    null,
    React.createElement('span', { className: 'fa fa-spin fa-circle-o-notch' })
  );
};

loadingStyles = {
  display: 'inline-block',
  width: '100%',
  margin: '8px 12px',
  fontSize: '16px',
  textAlign: 'center'
};

Loading = function Loading() {
  return React.createElement(
    'div',
    { style: loadingStyles },
    React.createElement(SpinLoading, null)
  );
};

LoadingTbody = function LoadingTbody() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var colSpan;
  colSpan = props.colSpan || 1;
  return React.createElement(
    'tbody',
    null,
    React.createElement(
      'tr',
      null,
      React.createElement(
        'td',
        { colSpan: colSpan, className: 'text-center' },
        React.createElement(Loading, null)
      )
    )
  );
};

// example for LoadMore
// renderLoadMoreOrders: ->
//   {pagination, isLoading, isLoadingMore, loadMoreOrders} = @props
//   <LoadMore show={pagination.hasMore && !isLoading}
//     disabled={isLoadingMore}
//     isLoading={isLoadingMore}
//     loadMore={loadMoreOrders}
//   >
//     Load more orders
//   </LoadMore>
LoadMore = function LoadMore(props) {
  var btn, children, disabled, isLoading, loadMore, show;
  show = props.show;
  loadMore = props.loadMore;
  disabled = props.disabled;
  isLoading = props.isLoading;
  children = props.children;

  if (!show) {
    return React.createElement('span', null);
  }
  btn = React.createElement(
    'button',
    { className: 'btn btn-primary', disabled: disabled, onClick: loadMore },
    children
  );
  if (isLoading) {
    btn = React.createElement(Loading, null);
  }
  return React.createElement(
    'div',
    { className: 'text-center' },
    btn
  );
};

LoadingOrValue = function LoadingOrValue(_ref) {
  var isLoading = _ref.isLoading,
      children = _ref.children;

  var content;
  content = isLoading && React.createElement(SpinLoading, null) || children;
  return React.createElement(
    'span',
    null,
    ' ',
    content
  );
};

LoadingOrValue.propTypes = {
  isLoading: PropTypes.bool.isRequired,
  children: PropTypes.any
};

module.exports = Loading;

module.exports.SpinLoading = SpinLoading;

module.exports.LoadingOrValue = LoadingOrValue;

module.exports.LoadingTbody = LoadingTbody;

module.exports.LoadMore = LoadMore;